// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.19.6
// source: api/proto/api.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KlonerCloneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner             string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Reponame          string `protobuf:"bytes,2,opt,name=reponame,proto3" json:"reponame,omitempty"`
	Url               string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Dockerfilecontext string `protobuf:"bytes,4,opt,name=dockerfilecontext,proto3" json:"dockerfilecontext,omitempty"`
}

func (x *KlonerCloneRequest) Reset() {
	*x = KlonerCloneRequest{}
	mi := &file_api_proto_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KlonerCloneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KlonerCloneRequest) ProtoMessage() {}

func (x *KlonerCloneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KlonerCloneRequest.ProtoReflect.Descriptor instead.
func (*KlonerCloneRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_api_proto_rawDescGZIP(), []int{0}
}

func (x *KlonerCloneRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *KlonerCloneRequest) GetReponame() string {
	if x != nil {
		return x.Reponame
	}
	return ""
}

func (x *KlonerCloneRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *KlonerCloneRequest) GetDockerfilecontext() string {
	if x != nil {
		return x.Dockerfilecontext
	}
	return ""
}

type KlonerCloneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path              string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Dockerfilecontext string `protobuf:"bytes,3,opt,name=dockerfilecontext,proto3" json:"dockerfilecontext,omitempty"`
	Success           bool   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *KlonerCloneResponse) Reset() {
	*x = KlonerCloneResponse{}
	mi := &file_api_proto_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KlonerCloneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KlonerCloneResponse) ProtoMessage() {}

func (x *KlonerCloneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KlonerCloneResponse.ProtoReflect.Descriptor instead.
func (*KlonerCloneResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_api_proto_rawDescGZIP(), []int{1}
}

func (x *KlonerCloneResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KlonerCloneResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *KlonerCloneResponse) GetDockerfilecontext() string {
	if x != nil {
		return x.Dockerfilecontext
	}
	return ""
}

func (x *KlonerCloneResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type KlonerCleanupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *KlonerCleanupRequest) Reset() {
	*x = KlonerCleanupRequest{}
	mi := &file_api_proto_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KlonerCleanupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KlonerCleanupRequest) ProtoMessage() {}

func (x *KlonerCleanupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KlonerCleanupRequest.ProtoReflect.Descriptor instead.
func (*KlonerCleanupRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_api_proto_rawDescGZIP(), []int{2}
}

func (x *KlonerCleanupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KlonerCleanupRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type KlonerCleanupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *KlonerCleanupResponse) Reset() {
	*x = KlonerCleanupResponse{}
	mi := &file_api_proto_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KlonerCleanupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KlonerCleanupResponse) ProtoMessage() {}

func (x *KlonerCleanupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KlonerCleanupResponse.ProtoReflect.Descriptor instead.
func (*KlonerCleanupResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_api_proto_rawDescGZIP(), []int{3}
}

func (x *KlonerCleanupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type KonstruktorBuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tag               string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Repopath          string `protobuf:"bytes,3,opt,name=repopath,proto3" json:"repopath,omitempty"`
	Dockerfilecontext string `protobuf:"bytes,4,opt,name=dockerfilecontext,proto3" json:"dockerfilecontext,omitempty"`
}

func (x *KonstruktorBuildRequest) Reset() {
	*x = KonstruktorBuildRequest{}
	mi := &file_api_proto_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KonstruktorBuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KonstruktorBuildRequest) ProtoMessage() {}

func (x *KonstruktorBuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KonstruktorBuildRequest.ProtoReflect.Descriptor instead.
func (*KonstruktorBuildRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_api_proto_rawDescGZIP(), []int{4}
}

func (x *KonstruktorBuildRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KonstruktorBuildRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *KonstruktorBuildRequest) GetRepopath() string {
	if x != nil {
		return x.Repopath
	}
	return ""
}

func (x *KonstruktorBuildRequest) GetDockerfilecontext() string {
	if x != nil {
		return x.Dockerfilecontext
	}
	return ""
}

type KonstruktorBuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imagenamewithtag string `protobuf:"bytes,1,opt,name=imagenamewithtag,proto3" json:"imagenamewithtag,omitempty"`
	Success          bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *KonstruktorBuildResponse) Reset() {
	*x = KonstruktorBuildResponse{}
	mi := &file_api_proto_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KonstruktorBuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KonstruktorBuildResponse) ProtoMessage() {}

func (x *KonstruktorBuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KonstruktorBuildResponse.ProtoReflect.Descriptor instead.
func (*KonstruktorBuildResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_api_proto_rawDescGZIP(), []int{5}
}

func (x *KonstruktorBuildResponse) GetImagenamewithtag() string {
	if x != nil {
		return x.Imagenamewithtag
	}
	return ""
}

func (x *KonstruktorBuildResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UnkloakerDeployRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imagenamewithtag string            `protobuf:"bytes,1,opt,name=imagenamewithtag,proto3" json:"imagenamewithtag,omitempty"`
	Port             int32             `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Replicas         int32             `protobuf:"varint,3,opt,name=replicas,proto3" json:"replicas,omitempty"`
	Envvars          map[string]string `protobuf:"bytes,4,rep,name=envvars,proto3" json:"envvars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UnkloakerDeployRequest) Reset() {
	*x = UnkloakerDeployRequest{}
	mi := &file_api_proto_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnkloakerDeployRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnkloakerDeployRequest) ProtoMessage() {}

func (x *UnkloakerDeployRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnkloakerDeployRequest.ProtoReflect.Descriptor instead.
func (*UnkloakerDeployRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_api_proto_rawDescGZIP(), []int{6}
}

func (x *UnkloakerDeployRequest) GetImagenamewithtag() string {
	if x != nil {
		return x.Imagenamewithtag
	}
	return ""
}

func (x *UnkloakerDeployRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UnkloakerDeployRequest) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *UnkloakerDeployRequest) GetEnvvars() map[string]string {
	if x != nil {
		return x.Envvars
	}
	return nil
}

type UnkloakerDeployResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UnkloakerDeployResponse) Reset() {
	*x = UnkloakerDeployResponse{}
	mi := &file_api_proto_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnkloakerDeployResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnkloakerDeployResponse) ProtoMessage() {}

func (x *UnkloakerDeployResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnkloakerDeployResponse.ProtoReflect.Descriptor instead.
func (*UnkloakerDeployResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_api_proto_rawDescGZIP(), []int{7}
}

func (x *UnkloakerDeployResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnkloakerDeployResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UnkloakerUndeployRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnkloakerUndeployRequest) Reset() {
	*x = UnkloakerUndeployRequest{}
	mi := &file_api_proto_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnkloakerUndeployRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnkloakerUndeployRequest) ProtoMessage() {}

func (x *UnkloakerUndeployRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnkloakerUndeployRequest.ProtoReflect.Descriptor instead.
func (*UnkloakerUndeployRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_api_proto_rawDescGZIP(), []int{8}
}

func (x *UnkloakerUndeployRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnkloakerUndeployResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UnkloakerUndeployResponse) Reset() {
	*x = UnkloakerUndeployResponse{}
	mi := &file_api_proto_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnkloakerUndeployResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnkloakerUndeployResponse) ProtoMessage() {}

func (x *UnkloakerUndeployResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnkloakerUndeployResponse.ProtoReflect.Descriptor instead.
func (*UnkloakerUndeployResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_api_proto_rawDescGZIP(), []int{9}
}

func (x *UnkloakerUndeployResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_api_proto_api_proto protoreflect.FileDescriptor

var file_api_proto_api_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a,
	0x12, 0x4b, 0x6c, 0x6f, 0x6e, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70,
	0x6f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70,
	0x6f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x4b, 0x6c, 0x6f, 0x6e, 0x65, 0x72,
	0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3a, 0x0a, 0x14, 0x4b, 0x6c, 0x6f,
	0x6e, 0x65, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x31, 0x0a, 0x15, 0x4b, 0x6c, 0x6f, 0x6e, 0x65, 0x72, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x4b, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6b, 0x74, 0x6f, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x70, 0x6f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x70, 0x6f, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x60, 0x0a, 0x18, 0x4b, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6b,
	0x74, 0x6f, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x77, 0x69, 0x74,
	0x68, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x77, 0x69, 0x74, 0x68, 0x74, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x16, 0x55, 0x6e, 0x6b, 0x6c, 0x6f,
	0x61, 0x6b, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x77, 0x69,
	0x74, 0x68, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x77, 0x69, 0x74, 0x68, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x44, 0x0a,
	0x07, 0x65, 0x6e, 0x76, 0x76, 0x61, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x6b, 0x6c, 0x6f, 0x61, 0x6b, 0x65, 0x72,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e,
	0x76, 0x76, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x76,
	0x61, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x6e, 0x76, 0x76, 0x61, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x43, 0x0a, 0x17, 0x55, 0x6e, 0x6b, 0x6c, 0x6f, 0x61, 0x6b, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x2a, 0x0a, 0x18, 0x55, 0x6e, 0x6b, 0x6c, 0x6f, 0x61, 0x6b, 0x65,
	0x72, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x35, 0x0a, 0x19, 0x55, 0x6e, 0x6b, 0x6c, 0x6f, 0x61, 0x6b, 0x65, 0x72, 0x55, 0x6e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xa3, 0x01, 0x0a, 0x09, 0x55, 0x6e, 0x6b, 0x6c,
	0x6f, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x06, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x6b, 0x6c, 0x6f, 0x61, 0x6b, 0x65,
	0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x6b, 0x6c, 0x6f, 0x61, 0x6b, 0x65, 0x72,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x08, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x6b, 0x6c, 0x6f, 0x61, 0x6b, 0x65, 0x72, 0x55, 0x6e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x6b, 0x6c, 0x6f, 0x61, 0x6b, 0x65, 0x72, 0x55, 0x6e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8e, 0x01,
	0x0a, 0x06, 0x4b, 0x6c, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x6e,
	0x65, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x6c, 0x6f, 0x6e, 0x65, 0x72,
	0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x6c, 0x6f, 0x6e, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x75, 0x70, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x6c, 0x6f, 0x6e,
	0x65, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x6c, 0x6f, 0x6e, 0x65, 0x72, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x57,
	0x0a, 0x0b, 0x4b, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6b, 0x74, 0x6f, 0x72, 0x12, 0x48, 0x0a,
	0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6b, 0x74, 0x6f, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6b, 0x74, 0x6f, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x68, 0x74, 0x74, 0x70, 0x73,
	0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x64,
	0x61, 0x6d, 0x6c, 0x61, 0x68, 0x62, 0x69, 0x62, 0x2f, 0x75, 0x6e, 0x6b, 0x6c, 0x6f, 0x61, 0x6b,
	0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_api_proto_rawDescOnce sync.Once
	file_api_proto_api_proto_rawDescData = file_api_proto_api_proto_rawDesc
)

func file_api_proto_api_proto_rawDescGZIP() []byte {
	file_api_proto_api_proto_rawDescOnce.Do(func() {
		file_api_proto_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_api_proto_rawDescData)
	})
	return file_api_proto_api_proto_rawDescData
}

var file_api_proto_api_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_proto_api_proto_goTypes = []any{
	(*KlonerCloneRequest)(nil),        // 0: proto.KlonerCloneRequest
	(*KlonerCloneResponse)(nil),       // 1: proto.KlonerCloneResponse
	(*KlonerCleanupRequest)(nil),      // 2: proto.KlonerCleanupRequest
	(*KlonerCleanupResponse)(nil),     // 3: proto.KlonerCleanupResponse
	(*KonstruktorBuildRequest)(nil),   // 4: proto.KonstruktorBuildRequest
	(*KonstruktorBuildResponse)(nil),  // 5: proto.KonstruktorBuildResponse
	(*UnkloakerDeployRequest)(nil),    // 6: proto.UnkloakerDeployRequest
	(*UnkloakerDeployResponse)(nil),   // 7: proto.UnkloakerDeployResponse
	(*UnkloakerUndeployRequest)(nil),  // 8: proto.UnkloakerUndeployRequest
	(*UnkloakerUndeployResponse)(nil), // 9: proto.UnkloakerUndeployResponse
	nil,                               // 10: proto.UnkloakerDeployRequest.EnvvarsEntry
}
var file_api_proto_api_proto_depIdxs = []int32{
	10, // 0: proto.UnkloakerDeployRequest.envvars:type_name -> proto.UnkloakerDeployRequest.EnvvarsEntry
	6,  // 1: proto.Unkloaker.Deploy:input_type -> proto.UnkloakerDeployRequest
	8,  // 2: proto.Unkloaker.Undeploy:input_type -> proto.UnkloakerUndeployRequest
	0,  // 3: proto.Kloner.Clone:input_type -> proto.KlonerCloneRequest
	2,  // 4: proto.Kloner.Cleanup:input_type -> proto.KlonerCleanupRequest
	4,  // 5: proto.Konstruktor.Build:input_type -> proto.KonstruktorBuildRequest
	7,  // 6: proto.Unkloaker.Deploy:output_type -> proto.UnkloakerDeployResponse
	9,  // 7: proto.Unkloaker.Undeploy:output_type -> proto.UnkloakerUndeployResponse
	1,  // 8: proto.Kloner.Clone:output_type -> proto.KlonerCloneResponse
	3,  // 9: proto.Kloner.Cleanup:output_type -> proto.KlonerCleanupResponse
	5,  // 10: proto.Konstruktor.Build:output_type -> proto.KonstruktorBuildResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_api_proto_api_proto_init() }
func file_api_proto_api_proto_init() {
	if File_api_proto_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_api_proto_api_proto_goTypes,
		DependencyIndexes: file_api_proto_api_proto_depIdxs,
		MessageInfos:      file_api_proto_api_proto_msgTypes,
	}.Build()
	File_api_proto_api_proto = out.File
	file_api_proto_api_proto_rawDesc = nil
	file_api_proto_api_proto_goTypes = nil
	file_api_proto_api_proto_depIdxs = nil
}
